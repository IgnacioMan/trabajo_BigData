[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ignacio",
    "section": "",
    "text": "Hola, soy Ignacio Manuel Muñoz Ayala\nEsta web sirve para presentar mi trabajo individual para la asignatura “Programación y manejo de datos en la era Del Big Data”, optativa de GECO en la Facultad de Economía de la Universitat de València.\nLa web de la asignatura está aquí y los trabajos de mis compañeros de curso puedes verlos aquí.\nEl trabajo lleva por título : “Temporada 2020-2021 F1”. El objetivo es mostrar un resumen de la temporada.\nEl trabajo puede verse aquí."
  },
  {
    "objectID": "my_trabajo_BigData.html",
    "href": "my_trabajo_BigData.html",
    "title": "Temporada 2020-2021 F1",
    "section": "",
    "text": "Vamos a utilizar datos del usuario grupoasturias. Los datos se encuentran en aquí\nLa temporada 2020-2021 fue una autentica locura, no solo por la rivalidad entre Hamilton y Vertappen, si no por las luchas que hubieron entre compañeros de equipo, la que hubo por el mundial de pilotos, entre otras muchas cosas.\n\n\nEn esa temporada incluyó 22 grandes premios repartidos por todo el mundo, los cuales puedes ver en el siguiente cuadro\n\nCódigo\n#Cargo los datos\n\ncircuitos <- qs::qread(\"./datos/races_2021.qs\")\n\n#cargo paquetes\nlibrary(tidyverse)\nlibrary(DT)\n\n\n\n\ndf <- circuitos %>% select(-c(season, circuit_id, race_name, lat, long, locality)) %>% rename(carrera=round, circuito=circuit_name, pais=country, fecha=date, hora=time)\n\n                           \ndf%>%\n  tibble::as_tibble() %>%\n  DT::datatable(filter = 'top', options = list( autoWidth = TRUE))\n\n\n\n\n\n\n\nLa parrilla esta compuesta por los siguientes pilotos\n\nCódigo#importamos los datos\ndatos_de_pilotos <- qs::qread(\"./datos/drivers_2021.qs\")\n\n#cargamos los paquetes\n\nlibrary(tidyverse)\nlibrary(gt)\n\n#tabla de todos los pilotos\n\n dt <- datos_de_pilotos %>% \n   select( c(familyName, nationality, permanentNumber))\n\n dt%>%\n   tibble::as_tibble() %>%\n   DT::datatable(filter = 'top', options = list( autoWidth = TRUE))\n\n\n\n\n\n\n\nCódigo#importamos los datos\ndatos_de_pilotos <- qs::qread(\"./datos/drivers_2021.qs\")\n\n#cargamos los paquetes\n\nlibrary(tidyverse)\nlibrary(gt)\n\n#tabla con foto del piloto más viejo\n\ndf_max <- datos_de_pilotos %>% select(c(driverId, dateOfBirth, nationality)) %>% slice_min(dateOfBirth,n=1)\n\n\nBandera <- \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Flag_of_Finland.svg/1920px-Flag_of_Finland.svg.png\"\n\ndf_viejo <- df_max %>% add_column(Bandera)\n\nTabla_viejo <- df_viejo %>% gt()\n\nTabla_viejo <- Tabla_viejo %>%\n  tab_header(title = md(\"**Piloto más viejo**\"))\n\nTabla_viejo <- Tabla_viejo %>%\n  tab_options(heading.background.color = \"#0035A5\") %>% tab_options(heading.title.font.size = 15,  column_labels.font.weight =  \"bold\")\n\n\nTabla_viejo <- Tabla_viejo  %>%\n  gt::text_transform(locations = cells_body(columns = c(Bandera)), fn = function(x) {gt::web_image(x, height = 50)}) %>%  cols_align(\n    align = \"center\")\n\n\n\nTabla_viejo\n\n\n\n\n\n\nPiloto más viejo\n    \n\ndriverId\n      dateOfBirth\n      nationality\n      Bandera\n    \n\nraikkonen\n1979-10-17\nFinnish\n\n\n\n\n\n\n\nCódigo\ndatos_de_pilotos <- qs::qread(\"./datos/drivers_2021.qs\")\n\n#cargamos los paquetes\n\nlibrary(tidyverse)\nlibrary(gt)\n\ndf_min <- datos_de_pilotos %>% select(c(driverId, dateOfBirth, nationality)) %>% slice_max(dateOfBirth,n=1)\n\n\nBandera <- \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Flag_of_Japan.svg/1280px-Flag_of_Japan.svg.png\"\n\ndf_joven <- df_min %>% add_column(Bandera)\n\nTabla_joven <- df_joven %>% gt()\n\nTabla_joven <- Tabla_joven %>%\n  tab_header(title = md(\"**Piloto más joven**\"))\n\nTabla_joven <- Tabla_joven %>%\n  tab_options(heading.background.color = \"#BA0000\") %>% tab_options(heading.title.font.size = 15,  column_labels.font.weight =  \"bold\")\n\n\nTabla_joven <- Tabla_joven  %>%\n  gt::text_transform(locations = cells_body(columns = c(Bandera)), fn = function(x) {gt::web_image(x, height = 50)}) %>%  cols_align(\n    align = \"center\")\n\n\nTabla_joven\n\n\n\n\n\n\nPiloto más joven\n    \n\ndriverId\n      dateOfBirth\n      nationality\n      Bandera\n    \n\ntsunoda\n2000-05-11\nJapanese"
  },
  {
    "objectID": "my_trabajo_BigData.html#los-pingüinos-molan",
    "href": "my_trabajo_BigData.html#los-pingüinos-molan",
    "title": "Temporada 2020-2021 F1",
    "section": "Los pingüinos molan",
    "text": "Los pingüinos molan\nVamos a ver una foto de un pingüinos\n\n\n\n\n\nUn pingüino chulo\n\n\n\nSí, lo pingüinos molan, así que vamos a poner otra foto de pingüinos que tenemos en nuestro PC pero la vamos a poner en el margen:"
  },
  {
    "objectID": "my_trabajo_BigData.html#algunos-gráficos",
    "href": "my_trabajo_BigData.html#algunos-gráficos",
    "title": "Temporada 2020-2021 F1",
    "section": "Algunos gráficos",
    "text": "Algunos gráficos\nBueno pues vamos a hacer algún gráfico, pero claro antes he de cargar los paquetes\n\nCódigolibrary(tidyverse)\n\n\nArreglo los datos\n\nCódigo#- cojos datos de pingüinos y arreglo un poco \ndf <- palmerpenguins::penguins %>% \n  dplyr::select(species, bill_depth_mm, body_mass_g) %>% \n  tidyr::drop_na()\n\n\n\nPrimer gráfico\n\nCódigo#- primer gráfico\np <- ggplot(data = df, \n       mapping = aes(x = bill_depth_mm, y = body_mass_g, color = species)) +\n     geom_point()\np\n\n\n\n\n\n\n\nSegundo\n\nCódigo#- segundo gráfico\np <- p + geom_smooth(method = \"lm\", se = FALSE) \n\np\n\n\n\n\n\n\n\nEl último\n\nCódigo#- tercer gráfico\np + geom_smooth(method = \"lm\", se = FALSE, color = \"black\") \n\n\n\n\n\n\n\n\nCon esto acabo mi trabajo para BigData!!\n\n\n\nInformación sobre la sesión\nAbajo muestro mi entorno de trabajo y paquetes utilizados\n\n\n current session info \n\n─ Session info ───────────────────────────────────────────────────────────────\n setting  value\n version  R version 4.2.1 (2022-06-23 ucrt)\n os       Windows 10 x64 (build 22000)\n system   x86_64, mingw32\n ui       RTerm\n language (EN)\n collate  Spanish_Spain.utf8\n ctype    Spanish_Spain.utf8\n tz       Europe/Paris\n date     2023-01-13\n pandoc   2.18 @ C:/Program Files/RStudio/bin/quarto/bin/tools/ (via rmarkdown)\n\n─ Packages ───────────────────────────────────────────────────────────────────\n ! package        * version date (UTC) lib source\n   assertthat       0.2.1   2019-03-21 [1] CRAN (R 4.2.1)\n   backports        1.4.1   2021-12-13 [1] CRAN (R 4.2.0)\n   broom            1.0.1   2022-08-29 [1] CRAN (R 4.2.1)\n   bslib            0.4.0   2022-07-16 [1] CRAN (R 4.2.1)\n   cachem           1.0.6   2021-08-19 [1] CRAN (R 4.2.1)\n   cellranger       1.1.0   2016-07-27 [1] CRAN (R 4.2.1)\n   cli              3.4.0   2022-09-08 [1] CRAN (R 4.2.1)\n   clipr            0.8.0   2022-02-22 [1] CRAN (R 4.2.1)\n   colorspace       2.0-3   2022-02-21 [1] CRAN (R 4.2.1)\n   commonmark       1.8.0   2022-03-09 [1] CRAN (R 4.2.1)\n   crayon           1.5.1   2022-03-26 [1] CRAN (R 4.2.1)\n   crosstalk        1.2.0   2021-11-04 [1] CRAN (R 4.2.1)\n   curl             4.3.2   2021-06-23 [1] CRAN (R 4.2.1)\n   DBI              1.1.3   2022-06-18 [1] CRAN (R 4.2.1)\n   dbplyr           2.2.1   2022-06-27 [1] CRAN (R 4.2.1)\n   desc             1.4.2   2022-09-08 [1] CRAN (R 4.2.1)\n   details          0.3.0   2022-03-27 [1] CRAN (R 4.2.2)\n   digest           0.6.29  2021-12-01 [1] CRAN (R 4.2.1)\n   dplyr          * 1.0.10  2022-09-01 [1] CRAN (R 4.2.1)\n   DT             * 0.25    2022-09-12 [1] CRAN (R 4.2.1)\n   ellipsis         0.3.2   2021-04-29 [1] CRAN (R 4.2.1)\n   evaluate         0.16    2022-08-09 [1] CRAN (R 4.2.1)\n   fansi            1.0.3   2022-03-24 [1] CRAN (R 4.2.1)\n   farver           2.1.1   2022-07-06 [1] CRAN (R 4.2.1)\n   fastmap          1.1.0   2021-01-25 [1] CRAN (R 4.2.1)\n   forcats        * 0.5.2   2022-08-19 [1] CRAN (R 4.2.1)\n   fs               1.5.2   2021-12-08 [1] CRAN (R 4.2.1)\n   gargle           1.2.1   2022-09-08 [1] CRAN (R 4.2.1)\n   generics         0.1.3   2022-07-05 [1] CRAN (R 4.2.1)\n   gganimate      * 1.0.8   2022-09-08 [1] CRAN (R 4.2.2)\n   ggplot2        * 3.3.6   2022-05-03 [1] CRAN (R 4.2.1)\n   ggrepel        * 0.9.2   2022-11-06 [1] CRAN (R 4.2.2)\n   ggthemes       * 4.2.4   2021-01-20 [1] CRAN (R 4.2.2)\n   gifski           1.6.6-1 2022-04-05 [1] CRAN (R 4.2.1)\n   glue             1.6.2   2022-02-24 [1] CRAN (R 4.2.1)\n   googledrive      2.0.0   2021-07-08 [1] CRAN (R 4.2.1)\n   googlesheets4    1.0.1   2022-08-13 [1] CRAN (R 4.2.1)\n   gt             * 0.7.0   2022-08-25 [1] CRAN (R 4.2.1)\n   gtable           0.3.1   2022-09-01 [1] CRAN (R 4.2.1)\n   haven            2.5.1   2022-08-22 [1] CRAN (R 4.2.1)\n   hms              1.1.2   2022-08-19 [1] CRAN (R 4.2.1)\n   htmltools        0.5.3   2022-07-18 [1] CRAN (R 4.2.1)\n   htmlwidgets      1.5.4   2021-09-08 [1] CRAN (R 4.2.1)\n   httr             1.4.4   2022-08-17 [1] CRAN (R 4.2.1)\n   jquerylib        0.1.4   2021-04-26 [1] CRAN (R 4.2.1)\n   jsonlite         1.8.0   2022-02-22 [1] CRAN (R 4.2.1)\n   knitr            1.40    2022-08-24 [1] CRAN (R 4.2.1)\n   labeling         0.4.2   2020-10-20 [1] CRAN (R 4.2.0)\n   lattice          0.20-45 2021-09-22 [2] CRAN (R 4.2.1)\n   lifecycle        1.0.2   2022-09-09 [1] CRAN (R 4.2.1)\n   lubridate        1.8.0   2021-10-07 [1] CRAN (R 4.2.1)\n   magrittr         2.0.3   2022-03-30 [1] CRAN (R 4.2.1)\n   Matrix           1.5-0   2022-09-10 [1] CRAN (R 4.2.1)\n   mgcv             1.8-40  2022-03-29 [2] CRAN (R 4.2.1)\n   modelr           0.1.9   2022-08-19 [1] CRAN (R 4.2.1)\n   munsell          0.5.0   2018-06-12 [1] CRAN (R 4.2.1)\n   nlme             3.1-157 2022-03-25 [2] CRAN (R 4.2.1)\n   palmerpenguins   0.1.1   2022-08-15 [1] CRAN (R 4.2.1)\n   pillar           1.8.1   2022-08-19 [1] CRAN (R 4.2.1)\n   pkgconfig        2.0.3   2019-09-22 [1] CRAN (R 4.2.1)\n   png              0.1-7   2013-12-03 [1] CRAN (R 4.2.0)\n   prettyunits      1.1.1   2020-01-24 [1] CRAN (R 4.2.1)\n   progress         1.2.2   2019-05-16 [1] CRAN (R 4.2.1)\n   purrr          * 0.3.4   2020-04-17 [1] CRAN (R 4.2.1)\n   qs             * 0.25.4  2022-08-09 [1] CRAN (R 4.2.2)\n   R6               2.5.1   2021-08-19 [1] CRAN (R 4.2.1)\n   RApiSerialize    0.1.2   2022-08-25 [1] CRAN (R 4.2.1)\n   Rcpp             1.0.9   2022-07-08 [1] CRAN (R 4.2.1)\n D RcppParallel     5.1.5   2022-01-05 [1] CRAN (R 4.2.1)\n   readr          * 2.1.2   2022-01-30 [1] CRAN (R 4.2.1)\n   readxl           1.4.1   2022-08-17 [1] CRAN (R 4.2.1)\n   reprex           2.0.2   2022-08-17 [1] CRAN (R 4.2.1)\n   rlang            1.0.5   2022-08-31 [1] CRAN (R 4.2.1)\n   rmarkdown        2.16    2022-08-24 [1] CRAN (R 4.2.1)\n   rprojroot        2.0.3   2022-04-02 [1] CRAN (R 4.2.1)\n   rstudioapi       0.14    2022-08-22 [1] CRAN (R 4.2.1)\n   rvest            1.0.3   2022-08-19 [1] CRAN (R 4.2.1)\n   sass             0.4.2   2022-07-16 [1] CRAN (R 4.2.1)\n   scales           1.2.1   2022-08-20 [1] CRAN (R 4.2.1)\n   sessioninfo      1.2.2   2021-12-06 [1] CRAN (R 4.2.1)\n   stringfish       0.15.7  2022-04-13 [1] CRAN (R 4.2.2)\n   stringi          1.7.8   2022-07-11 [1] CRAN (R 4.2.1)\n   stringr        * 1.4.1   2022-08-20 [1] CRAN (R 4.2.1)\n   tibble         * 3.1.8   2022-07-22 [1] CRAN (R 4.2.1)\n   tidyr          * 1.2.1   2022-09-08 [1] CRAN (R 4.2.1)\n   tidyselect       1.1.2   2022-02-21 [1] CRAN (R 4.2.1)\n   tidyverse      * 1.3.2   2022-07-18 [1] CRAN (R 4.2.1)\n   tweenr           2.0.2   2022-09-06 [1] CRAN (R 4.2.2)\n   tzdb             0.3.0   2022-03-28 [1] CRAN (R 4.2.1)\n   utf8             1.2.2   2021-07-24 [1] CRAN (R 4.2.1)\n   vctrs            0.4.1   2022-04-13 [1] CRAN (R 4.2.1)\n   vembedr        * 0.1.5   2021-12-11 [1] CRAN (R 4.2.2)\n   withr            2.5.0   2022-03-03 [1] CRAN (R 4.2.1)\n   xfun             0.32    2022-08-10 [1] CRAN (R 4.2.1)\n   xml2             1.3.3   2021-11-30 [1] CRAN (R 4.2.1)\n   yaml             2.3.5   2022-02-21 [1] CRAN (R 4.2.1)\n\n [1] C:/Users/nacho/AppData/Local/R/win-library/4.2\n [2] C:/Program Files/R/R-4.2.1/library\n\n D ── DLL MD5 mismatch, broken installation.\n\n──────────────────────────────────────────────────────────────────────────────"
  },
  {
    "objectID": "my_trabajo_BigData.html#circuitos",
    "href": "my_trabajo_BigData.html#circuitos",
    "title": "Temporada 2020-2021 F1",
    "section": "Circuitos",
    "text": "Circuitos\nEn esa temporada incluyó 22 grandes premios repartidos por todo el mundo, los cuales puedes ver en el siguiente cuadro\n\nCódigo\n#Cargo los datos\n\ncircuitos <- qs::qread(\"./datos/races_2021.qs\")\n\n#cargo paquetes\nlibrary(tidyverse)\nlibrary(DT)\n\n\n\n\ndf <- circuitos %>% select(-c(season, circuit_id, race_name, lat, long, locality)) %>% rename(carrera=round, circuito=circuit_name, pais=country, fecha=date, hora=time)\n\n                           \ndf%>%\n  tibble::as_tibble() %>%\n  DT::datatable(filter = 'top', options = list( autoWidth = TRUE))"
  },
  {
    "objectID": "my_trabajo_BigData.html#otra-cosa",
    "href": "my_trabajo_BigData.html#otra-cosa",
    "title": "Temporada 2020-2021 F1",
    "section": "otra cosa",
    "text": "otra cosa\n\nCódigo#importo los datos\nresult_carr_pilotos <- qs::qread(\"./datos/driver_standings_2021.qs\")\n\n#cargo los paquetes\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggrepel)\nresult_carr_pilotos<- result_carr_pilotos %>%  \n  mutate(points = as.numeric(points)) %>%\n  mutate(round = as.numeric(round))\n\n\npr <- result_carr_pilotos %>% filter(driverId==\"hamilton\" | driverId==\"max_verstappen\")\n\n#más paquetes\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(gganimate)\n\n#gráfico de hamilton y verstappen\npr %>% ggplot(aes(x=round, y=points, color=driverId, group = driverId)) + geom_line()\n\n#gráfico de todos los pilotos por escudería\ntodos <- result_carr_pilotos \n\n\ntodos %>% ggplot(aes(x=round, y=points, color=driverId, group = driverId)) +\n  geom_line() + \n  facet_wrap(vars(constructorId), nrow = 5, ncol = 5, scales = \"fixed\",  strip.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nEl dataset contiene observaciones sobre un conjunto de 22 pingüinos de 3 especies. Hay 5 variables."
  },
  {
    "objectID": "my_trabajo_BigData.html#mundial-de-constructores",
    "href": "my_trabajo_BigData.html#mundial-de-constructores",
    "title": "Temporada 2020-2021 F1",
    "section": "Mundial de constructores",
    "text": "Mundial de constructores\nEl mundial de constructores estuvo muy apretado entre Mercedes y Red Bull, durante toda la temporada Hamilton y Verstappen llevaron una rivalidad endiablada con la que iban al límite en las carreras y sumaron prácticamente los mismos puntos para sus equipos, así que los que acabaron decidiendo el mundial de constructores fueron los segundos pilotos de las escuderias.\n\nCódigo#cargo paquetes\nlibrary(qs)\nlibrary(tidyverse)\nlibrary(stats)\nlibrary(dplyr)\n#importo datos\n\nmun_constr <- qs::qread(\"./datos/constructor_standings_2021.qs\")\n\n\n#arreglo datos\n\nmun_constr <- mun_constr %>%  \n  mutate(points= as.numeric(points)) \n\n\n\nff <- mun_constr %>% \n  group_by(constructorId) %>% \n  mutate(puntos = cumsum(points)) %>%\n  filter(round==\"22\") %>%\n  select(-c(\"wins\", \"round\")) %>% \n  arrange((points)) %>% \n  group_by(constructorId)\n\n#hago la tabla\n\n\n\ndf <-ggplot(ff,  aes(x = reorder(constructorId, points), y = points, fill=constructorId)) + geom_col( ) +  coord_flip() +\n  labs(title = \"Clasificación mundial de constructores\", subtitle = \"2020-2021\",x=\"Escuderías\", y=\"Puntos\")\n\ndf"
  },
  {
    "objectID": "my_trabajo_BigData.html#mundial-de-pilotos",
    "href": "my_trabajo_BigData.html#mundial-de-pilotos",
    "title": "Temporada 2020-2021 F1",
    "section": "Mundial de pilotos",
    "text": "Mundial de pilotos\nEl mundial de pilotos estuvo muy disputado durante toda la temporada entre Hamilton y Verstappen, muchas veces dependía de si los pilotos corrían en territorio Red Bull o Mercedes, esto se podía aprecias más en la clasificación de antes de la carrera.\n\nCódigo#cargamos paquetes\nlibrary(tidyverse)\nlibrary(dplyr)\n\n#importo los datos\nclasificacion_Q <- qs::qread(\"./datos/qualifying_2021.qs\")\n\n#arreglo datos\n\nclasificacion_Q <- clasificacion_Q %>%  \n  mutate(position = as.numeric(position)) %>%\n  mutate(round = as.numeric(round))\n\n#modifico datos\n\nclasi <- clasificacion_Q %>% filter(driverId %in% c(\"max_verstappen\", \"hamilton\")) %>% select(-c(Q1, Q2, Q1_sec, Q2_sec, Q3_sec))\n\n\nclasi <- clasificacion_Q %>%\n  filter(driverId %in% c(\"max_verstappen\", \"hamilton\")) %>%\n  select(-c(Q1, Q2, Q1_sec, Q2_sec, Q3_sec))\n\n\n#más paquetes\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(gganimate)\n\n#hago el gráfico\n\nclasi %>% ggplot(aes(x=round, y=position, color=driverId, group = driverId)) + geom_line(linewidth = 3) +  transition_reveal(round) + labs(title=\"Posición de parrilla\",subtitle = \"Entre Hamilton y Verstappen\" , x=\"Carrera\", y=\"Posición de parrilla\") +  theme_minimal()\n\n\n\n\n\n\n\nDurante la carrera todo cambiaba, la grada vibraba cuando se acercaban, porque no importaba el circuito que fuese, cuando se cruzaban sabiamos que algo iba a pasar. Tuvimos suerte de vivir un mundial tan igualado y disputado entre estos dos titanes.\nAquí teneis un pequeño resumen de la temporada:\n\n\n\n\n\n\n\n\n\nEl desarrollo de puntos durante toda la temporada estuvo muy interesante, y no solo entre Hamilton y Vertappen, también entre compañeros de equipo como pasó en Ferrari, que Carlos Sainz acabaría ganando a Charles Leclerc, al igual que pasaría en Alpine, maxima igualdad entre Fernando Alonso y Esteban Ocon, aquí sería el asturiano el que se llevaría el duelo.\n\nCódigo#importo los datos\nresult_carr_pilotos <- qs::qread(\"./datos/driver_standings_2021.qs\")\n\n#cargo los paquetes\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggrepel)\nresult_carr_pilotos<- result_carr_pilotos %>%  \n  mutate(points = as.numeric(points)) %>%\n  mutate(round = as.numeric(round))\n\n\npr <- result_carr_pilotos %>% filter(driverId==\"hamilton\" | driverId==\"max_verstappen\") %>% rename(pilotos =  driverId)\n\n#más paquetes\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(gganimate)\n\n#gráfico de hamilton y verstappen\npr %>% ggplot(aes(x=round, y=points, color=pilotos, group = pilotos)) + geom_line() + labs(title=\"Clasificación pilotos\",subtitle = \"Entre Hamilton y Verstappen\" , x=\"Carrera\", y=\"Puntos\")\n\n\n#gráfico de todos los pilotos por escudería\ntodos <- result_carr_pilotos \ntodos <- todos %>% rename(pilotos = driverId)\n\ntodos %>% ggplot(aes(x=round, y=points, color=pilotos, group = pilotos)) +\n  geom_line() +  labs(title=\"Clasificación pilotos\",subtitle = \"Entre compañeros de equipo\" , x=\"Carrera\", y=\"puntos\") +\n  facet_wrap(vars(constructorId), nrow = 5, ncol = 5, scales = \"fixed\",  strip.position = \"bottom\")"
  }
]